MaxEventSize: 0 # value 0 unlimit the maximum event size that can be sent to message bus or core-data

Writable:
  LogLevel: "INFO"
  # InsecureSecrets are required for when Redis is used for message bus
  InsecureSecrets:
    MQTT:
      SecretName: "credentials"
      SecretData:
        username: ""
        password: ""

Service:
  Host: "localhost"
  Port: 59982
  StartupMsg: "device mqtt started"
# uncomment when running from command-line in hybrid mode with -cp -o flags
# Clients:
#   core-metadata:
#     Host: "localhost"
# Registry:
#   Host: "localhost"

MessageBus:
  # Host: localhost # uncomment when running from command-line in hybrid mode
  Optional:
  # Default MQTT & NATS Specific options that need to be here to enable environment variable overrides of them
    ClientId: "device-mqtt"

Device:
  # These have common values (currently), but must be here for service local env overrides to apply when customized
  ProfilesDir: "./res/profiles"
  DevicesDir: "./res/devices"

MQTTBrokerInfo:
  Schema: "tcp"
  Host: "localhost"
  Port: 1883
  Qos: 0
  KeepAlive: 3600
  ClientId: "device-mqtt"

  CredentialsRetryTime: 120 # Seconds
  CredentialsRetryWait: 1 # Seconds
  ConnEstablishingRetry: 10
  ConnRetryWaitTime: 5

  # AuthMode is the MQTT broker authentication mechanism. Currently, "none" and "usernamepassword" is the only AuthMode supported by this service, and the secret keys are "username" and "password".
  AuthMode: "none"
  CredentialsName: "credentials"

  # Comment out/remove when using multi-level topics
  IncomingTopic: "DataTopic"
  ResponseTopic: "ResponseTopic"
  UseTopicLevels: false

# Uncomment to use multi-level topics
#   IncomingTopic: "incoming/data/#"
#   ResponseTopic: "command/response/#"
#   UseTopicLevels: true

  Writable:
    # ResponseFetchInterval specifies the retry interval(milliseconds) to fetch the command response from the MQTT broker
    ResponseFetchInterval: 500
